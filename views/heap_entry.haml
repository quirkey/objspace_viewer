!= haml :heap_header, :locals => {:heap => @heap}, :layout => false


%h3 Entry: #{@entry.heap_address}

%dl
  %dt Type
  %dd= @entry.entry_type
  %dt Class Address
  %dd!= address_link @entry.heap, @entry.class_address
%dl
  - %w|bytesize size memsize capacity length|.each do |size_m|
    - if size = @entry.send(size_m) and size and size > 0
      %dt= size_m.capitalize
      %dd= size
%dl
  %dt Marked
  %dd= !!@entry.is_marked
  %dt WB Protected
  %dd= !!@entry.is_wb_protected
  %dt Old
  %dd= !!@entry.is_old
%dl
  - %w|encoding is_embedded is_shared is_frozen is_associated node_type name root|.each do |attr|
    - if a = @entry.send(attr) and !a.nil?
      %dt= attr.capitalize
      %dd= a
- if @entry.value
  %h4 Value
  = @entry.value

.clear
%h4 Referencing Entries
!= haml :heap_table, :locals => {:heap => @heap, :heap_entries => @entry.referencing_entries}, :layout => false

%h4 Referenced Entries
!= haml :heap_table, :locals => {:heap => @heap, :heap_entries => @entry.referenced_entries}, :layout => false
